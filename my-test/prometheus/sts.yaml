apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prometheus-core
  name: prometheus-core
  namespace: mon
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus-core
  serviceName: prometheus
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-core
        component: prometheus
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/monitoring
                operator: In
                values:
                - "true"
            weight: 100
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - "true"
            weight: 10
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: prometheus
              namespaces:
              - mon
              topologyKey: kubernetes.io/hostname
            weight: 1
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        runAsNonRoot: true
      containers:
      - args:
        - --web.enable-lifecycle
        - --storage.tsdb.retention.time=2h
        - --config.file=/prometheus.yaml
        - --storage.tsdb.path=/var/lib/prom/
        image: infra/monitoring-prom:v2.36.1-2022-06-27-dba1c76e
        imagePullPolicy: IfNotPresent
        name: prometheus
        resources:
          limits:
            cpu: "3"
            memory: 12G
          requests:
            cpu: 200m
            memory: 1G
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: configs-files
        - mountPath: /var/lib/prom/
          name: data-prometheus
      - args:
        - -volume-dir=/etc/prometheus/
        - -webhook-url=http://127.0.0.1:8080/-/reload
        image: infra/monitoring-prom-reloader:v0.7.1-2022-06-14-61b42da6
        imagePullPolicy: IfNotPresent
        name: prometheus-reloader
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: configs-files
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: docker-registry-secret
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      volumes:
      - name: configs-files
        projected:
          defaultMode: 420
          sources:
          - configMap:
              name: prometheus-core-config
          - configMap:
              name: prometheus-core-alerts-rules-config
          - configMap:
              name: prometheus-core-extra-rules-config
          - configMap:
              name: prometheus-core-extra-scrape-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus-core
      name: data-prometheus
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 25Gi
      storageClassName: csi-rbd
      volumeMode: Filesystem
    status:
      phase: Pending