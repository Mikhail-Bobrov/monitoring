{{- if .Values.alertmanager.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.alertmanager.name }}
  namespace: {{ .Values.namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.alertmanager.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.alertmanager.name }}
  serviceName: {{ .Values.alertmanager.name -}}-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.alertmanager.name }}
        stack: monitoring
      name: {{ .Values.alertmanager.name }}
    spec:
      {{- if .Values.alertmanager.security }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        runAsNonRoot: true
      {{- end }}
      containers:
      - image: {{ .Values.alertmanager.image.repo -}}/{{- .Values.alertmanager.image.name -}}:{{- .Values.alertmanager.image.tag }}
        args:
          - --config.file=/etc/alertmanager/alertmanager.yaml
          - --storage.path={{- .Values.alertmanager.args.storagePath | default "/var/lib/data" }}
          {{- if .Values.alertmanager.extArgs }}
          {{- range .Values.alertmanager.extArgs }}
          - {{ . }}
          {{- end }}
          {{- end }}
        imagePullPolicy: IfNotPresent
        name: {{ .Values.alertmanager.name }}
        {{- if .Values.blackbox.resources }}
        resources:
        {{- with .Values.blackbox.resources }}
          limits:
            cpu: {{ .limit.cpu  | default "100m" }}
            memory: {{ .limit.memory | default "200Mi" }}
          requests:
            cpu: {{ .request.cpu | default "50m" }}
            memory: {{ .request.memory | default "100Mi" }}
        {{- end }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/alertmanager/
          name: configs-files
        - mountPath: {{ .Values.alertmanager.args.storagePath | default "/var/lib/data" }}
          name: data-{{- .Values.alertmanager.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      {{- if eq .Values.config.cluster.type "single" }}
      - name: data-{{- .Values.alertmanager.name }}
        emptyDir: {}
      {{- end }}
      - name: configs-files
        projected:
          defaultMode: 420
          sources:
          - configMap:
              name: {{ .Values.alertmanager.name -}}-config
          - configMap:
              name: {{ .Values.alertmanager.name -}}-template
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  {{- if eq .Values.config.cluster.type "ha" }}
  {{- include "alertmanager-pvc" . }}
  {{- end }}
  {{- if eq .Values.config.cluster.type "medium" }}
  {{- include "alertmanager-pvc" . }}
  {{- end }}
{{- end }}