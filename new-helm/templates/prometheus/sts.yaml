{{- if .Values.prometheus.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Values.prometheus.name }}
  name: {{ .Values.prometheus.name }}
  namespace: {{ .Values.namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.prometheus.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.prometheus.name }}
  serviceName: {{ .Values.prometheus.name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.prometheus.name }}
        stack: monitoring
    spec:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        runAsNonRoot: true
      containers:
      - args:
        - --web.enable-lifecycle
        - --storage.tsdb.retention.time=2h
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/var/lib/prom/
        image: prom/prometheus:v2.48.0
        imagePullPolicy: IfNotPresent
        name: {{ .Values.prometheus.name }}
        resources:
          limits:
            cpu: "1"
            memory: 1G
          requests:
            cpu: 200m
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: configs-files
        - mountPath: /var/lib/prom/
          name: data-prometheus
      - args:
        - -volume-dir=/etc/prometheus/
        - -webhook-url=http://127.0.0.1:8080/-/reload
        image: jimmidyson/configmap-reload:v0.9.0
        imagePullPolicy: IfNotPresent
        name: {{ .Values.prometheus.name -}}-reloader
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: configs-files
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: {{ .Values.prometheus.name -}}-sa
      serviceAccountName: {{ .Values.prometheus.name -}}-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - name: configs-files
        projected:
          defaultMode: 420
          sources:
          - configMap:
              name: prometheus-config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
      name: data-prometheus
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 25Gi
      storageClassName: standard
      volumeMode: Filesystem
    status:
      phase: Pending
{{- end }}