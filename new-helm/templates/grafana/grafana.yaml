apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: mon
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
    app: grafana
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
      app: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      containers:
        - name: grafana
          image: "grafana/grafana:8.3.4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: admin-password
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            limits:
              cpu: 1
              memory: 1528Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - name: storage
            mountPath: "/var/lib/grafana"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: grafana-pvc